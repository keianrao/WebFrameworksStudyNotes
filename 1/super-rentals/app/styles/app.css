* {
	margin: 0;
	padding: 0;
	/*
	Are the default values not 0?
	If so, is it normal practice to turn margins and padding off when
	using JavaScript-based GUI components..?
	*/
}

body,
h1, h2, h3, h4, h5, h6,
p, span, a,
div, button {
	font-family: "Linux Biolinum O";
	line-height: 1.5;  /* No unit? */
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

body {
	background: #f3f3f3;
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

.button {
	padding: 10px 30px 10px;
	text-decoration: none;
	color: #fff;
	background: #016aba;
	border-radius: 5px;
	border: none;
	font-size: 20px;
	font-weight: bold;
	opacity: 0.9;
	display: inline-block;
}
.button:hover {
	opacity: 1;
}

.container {
	max-width: 1024px;
	min-height: 100vh;
	/* This seems like a strange DOM element.. */
	background: #f9f9f9;  /* Slightly brighter than body background? */
	margin: 0 auto;  /* Horizontal centre? */
}
/* .container is described as 'body container'. */



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

.menu {
	height: 4em;
	background-color: #667ae4;
	background-color: #05526A;
	background-color: #e46855;
	/*
	The only use I know so far for property overloading is
	providing fallbacks for older browsers.
	That definitely isn't what's here. Hmm..
	*/
}
/* Wait, what is a menu? */

.menu h1 {
	position: relative;
	padding: 5px 0 0 8px;
	color: #f9f9f9;
	font-size: 1.8em;
	font-style: italic;
}

.menu a, .menu .links {
	display: inline-block;
}

.menu a {
	text-decoration: none;
	padding: 0 15px;
	color: #fff;
	/* Sorry, a white link? */
	font-size: 20px;
	font-weight: bold;
}
.menu a:hover, .menu a.active {
	/* Is ".menu a.active" not a typo? */
	opacity: 1;
}

.menu .links {
	padding: 0 21px;
}

.menu .links a {
	position: relative;
	bottom: 5px;
}

.rentals label span {
	font-size: 140%;
	margin: 50px auto 20px;
	display: block;
	text-align: center;
	font-style: italic;
}

.rentals input {
	padding: 11px;
	font-size: 18px;
	width: 500px;
	margin: 20px auto 50px;
	background-color: rgba(255, 255, 255, 0.75);
	border: solid 1px lightgray;
	display: block;
}

.menu input:focus {
	background-color: #f9f9f9;
	outline: none;
}

.menu button {
	margin-right: 15px;
	position: relative;
	top: -1px;
	left: -5px;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	background-color: #262626;
	cursor: pointer;
	opacity: 1;
}
.menu button:hover {
	background-color: #111;
	opacity: 1;
}

.menu .results {
	display: none;
	position: absolute;
	width: 215px;
	top: 54px;
	left: 10px;  /* Oh no. */
	
	background-color: #f6f6f6;
	border-right: 1px solid rgba(0, 0, 0, 0.05);
	border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

/* Hand getting quite strained now. */

.results {
	margin-top: -10px;
}

.results li {
	list-style: none;
	padding: 10px 15px;
}
.menu .results li:hover {
	background: #f3f3f3;
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

.body {
	padding: 15px;
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

/*
Apparently 'jumbo' wasn't random, it was a reference.
But, one I don't understand..
*/

.jumbo {
	padding: 50px;
	background: #f6f6f6;
}
.jumbo:hover {
	background-color: #f3f3f3;
}

.jumbo h2 {
	font-size: 3.2em;
	/* Come to think of it, these are hardcoded for font Lato, aren't they? */
	margin-top: -25px;
}

.jumbo p, .jumbo address {
	margin-bottom: 25px;
}

.jumbo img {
	height: 200px;
	position: relative;
	top: -25px;
	right: -20px;
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

.rental {
	margin-top: 15px;
	background-color: #f6f6f6;
	padding: 20px 25px;
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-wrap: wrap;
}
.rental:hover {
	background-color: #f3f3f3;
}

.rental img {
	border-radius: 5px;
}

.rental .image {
	flex-grow: 0;
	flex-basis: 150px;
	margin: 20px 25px;
	/* I wonder how these look like.. */
	
	text-align: center;
}

.rental button.image {
	position: relative;
	cursor: pointer;
	border: none;
	background: transparent;
	z-index: 1;
}
.rental button.image:focus {
	outline: none;
}
.rental button.image:after {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: -1;
	margins: -20px;
	padding: 20px;
	border-radius: 5px;
	background: #016aba;
	opacity: 0;
	transition: opacity 0.25s ease-in-out;
}

.rental button.image:focus:after,
.rental button.image:hover:after {
	opacity: 0.1;
}

.rental .image img {
	max-width: 100%;
}

.rental .image.large {
	margin: 30px 25px 50px 25px;
	flex-radius: 100%;
}

.rental .image small {
	/* Not a typo? */
	display: block;
	margin-top: 5px;
	margin-bottom: -15px;
	text-align: center;
	color: #016aba;
	
	position: relative;
	/* Purportedly Safari-specific fix. A clipping issue. */
}

.rental .image.large small {
	margin-top: 10px;
	margin-bottom: 0px;
	font-size: 110%;
}

.rental .details {
	flex-basis: 50%;
	flex-grow: 2;
	display: flex;
	height: 150px;
	margin: 20px 25px;
	justify-content: space-between;
	flex-wrap: wrap;
	align-content: space-around;
}

.rental h3 {
	flex-basis: 100%;
}

.rental h3 a {
	display: inline;
}

.rental .detail {
	flex-basis: 50%;
	font-weight: 300;
	font-style: italic;
	white-space: nowrap;
}

.rental .detail span {
	font-weight: 400;
	font-style: normal;
}

.rental map {
	width: 150px;
	height: 150px;
}

.rental.detailed {
	background: none;
	align-items: flex-start;
}

.rental.detailed .image {
	flex-basis: 320px;
}

.rental.detailed .image.large {
	/*
	Is .image.large a totally different class from .image, and that
	period in the middle is just a naming convention..?
	*/

	margin: 30px 25px 50px 25px;
	flex-basis: 100%;
}

.rental.detailed .detail {
	margin: 5px 0px;
	flex-basis: 100%;
	flex-shrink: 2;
}

.rental.detailed .description {
	white-space: normal;
	flex-basis: 100%;
	flex-shrink: 1;
}

.rental.detailed .map {
	flex-basis: 100%;
	margin: 50px 25px 25px 25px;
}

.rental.detailed .map img {
	width: 100%;
	height: auto;
}



/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

@media only screen and (max-width: 919px /* oddly specific */) {
	.rental.detailed .image,
	.rental.detailed .image.large {
		margin: 30px 25px 25px 25px;
		flex-basis: 100%;
		cursor: default;
	}
	
	.rental.detailed .image:hover {
		flex-basis: 100%;
		cursor: default;
	}
	
	.rental.detailed button.image:hover:after {
		opacity: 0:
	}
	.rental.detailed button.image:focus:after {
		opacity: 0.1;
	}
	
	.rental.detailed .map {
		margin-top: 25px;
	}
}


/*  //  \\  //  \\  //  \\  //  \\  //  \\  //  \\  */

.light { font-weight: 300; }
.left { float: left; }
.right { float: right; }
.hidden { display: none; }
.relative { position: relative; }

.tomster {
	background: url(../assets/images/teaching-tomster.png);
	background-size: contain;
	background-repeat: no-repeat;
	height: 200px;
	width: 200px;
	
	position: relative;
	top: -25px;
}

.screen-reader {
	position: absolute;
	overflow: hidden;
	clip: rect(0 0 0 0);
	height: 1px;
	width: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
}


/*
I understand now why they said "our designer sent us some CSS to use"..
That was a lot of CSS to type (= review) in one sitting.

I did get some insights, but it kind of seems the programmer should not be
reviewing this after all. Most of the file is either CSS esoterica, or is
based around implicit assumptions (properties and values chosen with the
a specific rendered page as reference).

Were these autogenerated? The impression I got was that it was hand-written.
But yet if so, that's quite surprising.
*/
